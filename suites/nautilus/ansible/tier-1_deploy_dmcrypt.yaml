#===============================================================================================
# Tier-level: 1
# Test-Suite: tier-1_deploy.yaml
# Test-Case: Deployment and rollover tests
#
# Cluster Configuration:
#    cephci/conf/nautilus/ansible/tier-1_deploy.yaml
#
#    7-Node cluster(RHEL-7.9 and above)
#    3 MONS, 2 MDS, 1 MGR, 3 OSD and 2 RGW service daemon(s)
#     Node1 - Mon, Mgr, Installer, OSD
#     Node2 - Mon, Mgr, OSD
#     Node3 - Mon, OSD
#     Node4 - Client, Grafana
#     Node5 - Pool , used for roll-over test case
#     Node6 - Pool , used for roll-over test case
#     Node7 - Pool , used for roll-over test case
#
# Test Steps:
#   (1) Install Pre-requisites, and Deploy Ceph using ceph-ansible
#   (2) Use pool nodes to add/remove MON, OSD, RGW and MDS using roll-over playbook.
#===============================================================================================
tests:
   - test:
      name: install ceph pre-requisites
      module: install_prereq.py
      abort-on-fail: true

   - test:
      name: ceph ansible
      polarion-id: CEPH-83572954
      module: test_ansible.py
      config:
        is_mixed_lvm_configs: True
        ansi_config:
            dmcrypt: true
            ntp_service_enabled: true
            ceph_origin: distro
            ceph_repository: rhcs
            osd_scenario: lvm
            fetch_directory: ~/fetch
            copy_admin_key: true
            dashboard_enabled: True
            dashboard_admin_user: admin
            dashboard_admin_password: p@ssw0rd
            grafana_admin_user: admin
            grafana_admin_password: p@ssw0rd
            node_exporter_container_image: registry.redhat.io/openshift4/ose-prometheus-node-exporter:v4.6
            grafana_container_image: registry.redhat.io/rhceph/rhceph-4-dashboard-rhel8:4
            prometheus_container_image: registry.redhat.io/openshift4/ose-prometheus:v4.6
            alertmanager_container_image: registry.redhat.io/openshift4/ose-prometheus-alertmanager:v4.6
      desc: osd with 6 osd scenarios with lvm dmcrypt
      destroy-cluster: False
      abort-on-fail: true

   - test:
       name: librbd workunit
       module: test_workunit.py
       config:
         test_name: rbd/test_librbd_python.sh
         branch: nautilus
         role: mon
       desc: Test librbd unit tests
   - test:
       name: rados_bench_test
       module: radosbench.py
       config:
         pg_num: '128'
         pool_type: 'normal'
       desc: run rados bench for 360 - normal profile
